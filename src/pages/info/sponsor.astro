---
import { TextSection } from '@components/odyssey-theme';
import ImageTextCard from '../../components/cards/ImageTextCardSponsor.astro';
import Layout from '../../layouts/Page.astro';
import { getEntry, getCollection } from 'astro:content';

const sponsorPage = await getEntry('pages', 'sponsor');
const { data } = sponsorPage;

// Get all sponsors and group them by tier
const allSponsors = await getCollection('sponsors');
const sortedSponsors = allSponsors.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const sponsorsByTier = {
    Platinum: sortedSponsors.filter(s => s.data.tier === 'Platinum'),
    Gold: sortedSponsors.filter(s => s.data.tier === 'Gold'),
    Silver: sortedSponsors.filter(s => s.data.tier === 'Silver'),
    Bronze: sortedSponsors.filter(s => s.data.tier === 'Bronze'),
};

const seo = {
    title: data.title,
    description: data.description,
};

// Style block for the row layout
const styles = `
    .sponsor-container {
        display: flex;
        flex-direction: column;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
        gap: 3rem;
    }

    .sponsors-section {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .sponsor-tier {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .sponsor-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        align-items: stretch;
    }

    .sponsor-row :global(.image-text-card) {
        height: 160px;
        display: flex;
        flex-direction: column;
        background: #fff;
        border: 1px solid #eee;
        border-radius: 8px;
        overflow: hidden;
    }

    .sponsor-row :global(.corevalue-card__content) {
        padding: 1rem !important;
        flex-direction: column-reverse !important;
        height: 100%;
    }

    .sponsor-row :global(.corevalue-card__title) {
        font-size: 0.675rem !important;
        margin: 0.5rem 0 0 0 !important;
        color: #888 !important;
        font-weight: normal !important;
        order: 2;
    }

    .sponsor-row :global(.corevalue-card__content picture) {
        flex: 1;
        display: flex;
        align-items: center;
        padding: 0 !important;
        width: 100%;
        height: auto !important;
    }

    .sponsor-row :global(.corevalue-card__img) {
        max-height: 100px !important;
        width: auto !important;
        max-width: 90% !important;
        object-fit: contain !important;
        transform: none !important;
        box-shadow: none !important;
    }

    .sponsor-row :global(p) {
        display: none;
    }

    .pdf-section {
        width: 100%;
        margin: 2rem 0;
    }

    .contact-info {
        margin: 1.5rem 0;
        text-align: center;
    }

    embed {
        width: 100%;
        height: 800px;
        margin: 0 auto;
        display: block;
        max-width: 900px;
    }

    h3.tier-title {
        margin-bottom: 0.5rem;
    }

    @media (max-width: 768px) {
        .sponsor-row {
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        }

        embed {
            height: 500px;
        }
    }
`;
---

<Layout {seo}>
    <style set:html={styles}></style>
    
    <TextSection>
        <h1>{data.title}</h1>
        {data.introText && <p>{data.introText}</p>}

        <div class="sponsor-container">
            <!-- Sponsors Section -->
            <div class="sponsors-section">
                <h2>Current Sponsors</h2>

                {['Platinum', 'Gold', 'Silver', 'Bronze'].map(tier => {
                    const tierSponsors = sponsorsByTier[tier];
                    if (tierSponsors.length === 0) return null;

                    return (
                        <div class="sponsor-tier">
                            <h3 class="tier-title">{tier} Sponsors:</h3>
                            <div class="sponsor-row">
                                {tierSponsors.map(sponsor => (
                                    <ImageTextCard
                                        title={sponsor.data.name}
                                        imgSrc={sponsor.data.logo}
                                        description=""
                                    />
                                ))}
                            </div>
                        </div>
                    );
                })}
            </div>

            <!-- PDF Section -->
            <div class="pdf-section">
                <embed src={data.pdfPath} />
                <p class="contact-info">
                    {data.contactText} {data.contactEmail}
                </p>
            </div>
        </div>
    </TextSection>
</Layout>